/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.4
 * Generated at: 2025-03-17 10:19:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.ArrayList;
import java.util.UUID;
import java.time.format.DateTimeFormatter;
import uk.ac.ucl.model.*;

public final class notesIndex_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_packages.add("uk.ac.ucl.model");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("java.time.format.DateTimeFormatter");
    _jspx_imports_classes.add("java.util.UUID");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

  NoteHandler noteHandler = ModelFactory.getModel().getNoteHandler();
  ArrayList<Note> notes = noteHandler.getContents();
  CategoryHandler categoryHandler = ModelFactory.getModel().getCategoryHandler();
  ArrayList<Category> categories = categoryHandler.getContents();
  DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm");

      out.write("\n");
      out.write("\n");
      out.write("<div class=\"container mt-4\">\n");
      out.write("  <h2 class=\"mb-3\">My Notes</h2>\n");
      out.write("\n");
      out.write("  ");
 if (notes.isEmpty()) { 
      out.write("\n");
      out.write("  <p class=\"text-muted\">No notes available.</p>\n");
      out.write("  ");
 } else { 
      out.write("\n");
      out.write("  <table class=\"table table-striped\">\n");
      out.write("    <thead>\n");
      out.write("    <tr>\n");
      out.write("      <th>Note Title</th>\n");
      out.write("      <th>Categories</th>\n");
      out.write("      <th>Last Edited</th>\n");
      out.write("      <th>Actions</th>\n");
      out.write("    </tr>\n");
      out.write("    </thead>\n");
      out.write("    <tbody>\n");
      out.write("    ");
 for (Note note : notes) { 
      out.write("\n");
      out.write("    <tr>\n");
      out.write("      <td>\n");
      out.write("        <a href=\"editNote.jsp?id=");
      out.print( note.getID() );
      out.write("\" class=\"text-decoration-none\">\n");
      out.write("          ");
      out.print( note.getTitle() );
      out.write("\n");
      out.write("        </a>\n");
      out.write("      </td>\n");
      out.write("      <td>\n");
      out.write("        <div class=\"dropdown\">\n");
      out.write("          <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\">\n");
      out.write("            Manage Categories\n");
      out.write("          </button>\n");
      out.write("          <ul class=\"dropdown-menu p-2\">\n");
      out.write("            ");
 for (Category category : categories) { 
      out.write("\n");
      out.write("            <li class=\"d-flex align-items-center\">\n");
      out.write("              <!-- Checkbox -->\n");
      out.write("              <input type=\"checkbox\" class=\"form-check-input me-2\" id=\"category-");
      out.print( note.getID() );
      out.write('-');
      out.print( category.getID() );
      out.write("\"\n");
      out.write("                ");
      out.print( note.belongsToCategory(UUID.fromString(category.getID())) ? "checked" : "" );
      out.write("\n");
      out.write("                     onchange=\"updateCategory('");
      out.print( note.getID() );
      out.write("', '");
      out.print( category.getID() );
      out.write("', this.checked)\">\n");
      out.write("\n");
      out.write("              <label class=\"form-check-label\" for=\"category-");
      out.print( note.getID() );
      out.write('-');
      out.print( category.getID() );
      out.write("\">\n");
      out.write("                ");
      out.print( category.getName() );
      out.write("\n");
      out.write("              </label>\n");
      out.write("            </li>\n");
      out.write("            ");
 } 
      out.write("\n");
      out.write("            <li><hr class=\"dropdown-divider\"></li>\n");
      out.write("            <li>\n");
      out.write("              <button class=\"btn btn-primary w-100\" data-bs-toggle=\"modal\" data-bs-target=\"#addCategoryModal\">Add Category</button>\n");
      out.write("            </li>\n");
      out.write("          </ul>\n");
      out.write("        </div>\n");
      out.write("      </td>\n");
      out.write("\n");
      out.write("      <td>");
      out.print( note.getLastEditDate() );
      out.write("</td>\n");
      out.write("      <td>\n");
      out.write("        <div class=\"dropdown\">\n");
      out.write("          <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenu");
      out.print( note.getID() );
      out.write("\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\n");
      out.write("            Actions\n");
      out.write("          </button>\n");
      out.write("          <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenu");
      out.print( note.getID() );
      out.write("\">\n");
      out.write("            <li>\n");
      out.write("              <form action=\"DuplicateNoteServlet\" method=\"post\">\n");
      out.write("                <input type=\"hidden\" name=\"noteID\" value=\"");
      out.print( note.getID() );
      out.write("\">\n");
      out.write("                <button type=\"submit\" class=\"dropdown-item\">Duplicate</button>\n");
      out.write("              </form>\n");
      out.write("            </li>\n");
      out.write("            <li>\n");
      out.write("              <button class=\"dropdown-item text-danger\" data-bs-toggle=\"modal\" data-bs-target=\"#confirmDeleteModal\" onclick=\"setDeleteNoteID('");
      out.print( note.getID() );
      out.write("')\">\n");
      out.write("                Delete\n");
      out.write("              </button>\n");
      out.write("            </li>\n");
      out.write("            <li><a class=\"dropdown-item disabled\">Categories (Coming Soon)</a></li>\n");
      out.write("          </ul>\n");
      out.write("        </div>\n");
      out.write("      </td>\n");
      out.write("    </tr>\n");
      out.write("    ");
 } 
      out.write("\n");
      out.write("    </tbody>\n");
      out.write("  </table>\n");
      out.write("  ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("  <div class=\"mt-3\">\n");
      out.write("    <a href=\"createNote.jsp\" class=\"btn btn-success\">Create a New Note</a>\n");
      out.write("  </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script src=\"assets/js/updateCategoryRequest.js\"></script>\n");
      out.write("\n");
      out.write("<div class=\"modal fade\" id=\"confirmDeleteModal\" tabindex=\"-1\" aria-labelledby=\"confirmDeleteModalLabel\" aria-hidden=\"true\">\n");
      out.write("  <div class=\"modal-dialog\">\n");
      out.write("    <div class=\"modal-content\">\n");
      out.write("      <div class=\"modal-header\">\n");
      out.write("        <h5 class=\"modal-title\" id=\"confirmDeleteModalLabel\">Confirm Deletion</h5>\n");
      out.write("        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n");
      out.write("      </div>\n");
      out.write("      <div class=\"modal-body\">\n");
      out.write("        Are you sure you want to delete this note?\n");
      out.write("      </div>\n");
      out.write("      <div class=\"modal-footer\">\n");
      out.write("        <form action=\"DeleteNoteServlet\" method=\"post\">\n");
      out.write("          <input type=\"hidden\" id=\"deleteNoteID\" name=\"noteID\">\n");
      out.write("          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\n");
      out.write("          <button type=\"submit\" class=\"btn btn-danger\">Delete</button>\n");
      out.write("        </form>\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("  function setDeleteNoteID(noteID) {\n");
      out.write("    document.getElementById(\"deleteNoteID\").value = noteID;\n");
      out.write("  }\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<div class=\"modal fade\" id=\"addCategoryModal\" tabindex=\"-1\" aria-labelledby=\"addCategoryModalLabel\" aria-hidden=\"true\">\n");
      out.write("  <div class=\"modal-dialog\">\n");
      out.write("    <div class=\"modal-content\">\n");
      out.write("      <div class=\"modal-header\">\n");
      out.write("        <h5 class=\"modal-title\" id=\"addCategoryModalLabel\">Add Category</h5>\n");
      out.write("        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n");
      out.write("      </div>\n");
      out.write("      <div class=\"modal-body\">\n");
      out.write("        <form action=\"CreateCategoryServlet\" method=\"post\">\n");
      out.write("          <div class=\"mb-3\">\n");
      out.write("            <label for=\"categoryName\" class=\"form-label\">Category Name:</label>\n");
      out.write("            <input type=\"text\" id=\"categoryName\" name=\"categoryName\" class=\"form-control\" required>\n");
      out.write("          </div>\n");
      out.write("\n");
      out.write("          <button type=\"submit\" class=\"btn btn-success\">Add Category</button>\n");
      out.write("          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\n");
      out.write("        </form>\n");
      out.write("      </div>\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("</div>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
