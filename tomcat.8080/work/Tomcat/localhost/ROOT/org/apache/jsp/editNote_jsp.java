/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.4
 * Generated at: 2025-03-22 13:48:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.UUID;
import uk.ac.ucl.model.*;
import java.util.ArrayList;
import java.io.File;

public final class editNote_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_packages.add("uk.ac.ucl.model");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(4);
    _jspx_imports_classes.add("java.util.UUID");
    _jspx_imports_classes.add("java.io.File");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

    NoteHandler noteHandler = ModelFactory.getModel().getNoteHandler();
    CategoryHandler categoryHandler = ModelFactory.getModel().getCategoryHandler();

    ArrayList<Category> categories = categoryHandler.getContents();

    UUID noteID = UUID.fromString(request.getParameter("id"));
    Note note = noteHandler.getContentFromID(noteID);

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <title>Edit Note</title>\n");
      out.write("    <link rel=\"stylesheet\" href=\"assets/css/styles.css\">\n");
      out.write("    <link rel=\"stylesheet\" href=\"assets/css/bootstrap.min.css\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("<div class=\"container mt-4\">\n");
      out.write("    <h2 class=\"mb-3\">Edit Note</h2>\n");
      out.write("\n");
      out.write("    <div class=\"card p-4 shadow-sm\">\n");
      out.write("        <div class=\"d-flex gap-2\">\n");
      out.write("            <div class=\"mb-3 dropdown\">\n");
      out.write("                <button class=\"btn btn-outline-secondary dropdown-toggle\" type=\"button\" data-bs-toggle=\"dropdown\">\n");
      out.write("                    Manage Categories\n");
      out.write("                </button>\n");
      out.write("                <ul class=\"dropdown-menu p-2\">\n");
      out.write("                    ");
 for (Category category : categories) { 
      out.write("\n");
      out.write("                    <li class=\"d-flex align-items-center\">\n");
      out.write("                        <!-- Checkbox -->\n");
      out.write("                        <input type=\"checkbox\" class=\"form-check-input me-2\" id=\"category-");
      out.print( note.getID() );
      out.write('-');
      out.print( category.getID() );
      out.write("\"\n");
      out.write("                            ");
      out.print( note.belongsToCategory(category.getID()) ? "checked" : "" );
      out.write("\n");
      out.write("                               onchange=\"updateCategory('");
      out.print( note.getID() );
      out.write("', '");
      out.print( category.getID() );
      out.write("', this.checked)\">\n");
      out.write("\n");
      out.write("                        <label class=\"form-check-label\" for=\"category-");
      out.print( note.getID() );
      out.write('-');
      out.print( category.getID() );
      out.write("\">\n");
      out.write("                            ");
      out.print( category.getName() );
      out.write("\n");
      out.write("                        </label>\n");
      out.write("                    </li>\n");
      out.write("                    ");
 } 
      out.write("\n");
      out.write("                    <li><hr class=\"dropdown-divider\"></li>\n");
      out.write("                    <li>\n");
      out.write("                        <button class=\"btn btn-primary w-100\" data-bs-toggle=\"modal\" data-bs-target=\"#addCategoryModal\">Add Category</button>\n");
      out.write("                    </li>\n");
      out.write("                </ul>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <div class=\"mb-3\">\n");
      out.write("                <button type=\"button\" class=\"btn btn-outline-secondary\" data-bs-toggle=\"modal\" data-bs-target=\"#dumpModal\">\n");
      out.write("                    Dump File into Note\n");
      out.write("                </button>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <div class=\"mb-3 ms-auto\">\n");
      out.write("                <button type=\"button\" class=\"btn btn-danger\" id=\"clearNoteBtn\">\n");
      out.write("                    Clear Text Content\n");
      out.write("                </button>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <form action=\"UpdateNoteServlet\" method=\"post\" enctype=\"multipart/form-data\">\n");
      out.write("\n");
      out.write("            <input type=\"hidden\" name=\"noteID\" value=\"");
      out.print( note.getID() );
      out.write("\">\n");
      out.write("\n");
      out.write("            <div class=\"mb-3\">\n");
      out.write("                <label for=\"title\" class=\"form-label\">Title:</label>\n");
      out.write("                <input type=\"text\" id=\"title\" name=\"title\" class=\"form-control\" value=\"");
      out.print( note.getTitle() );
      out.write("\" required>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <div class=\"mb-3\">\n");
      out.write("                <label for=\"content\" class=\"form-label\">Content:</label>\n");
      out.write("                <textarea id=\"content\" name=\"content\" rows=\"5\" class=\"form-control\">");
      out.print( String.join("\n", note.getTextContent()).trim() );
      out.write("</textarea>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <div class=\"mb-3\">\n");
      out.write("                <label for=\"imageInput\" class=\"form-label\">Upload Image:</label>\n");
      out.write("                <div class=\"row g-2\">\n");
      out.write("                    <div class=\"col\">\n");
      out.write("                        <input class=\"form-control\" type=\"file\" id=\"imageInput\" name=\"image\" accept=\"image/*\">\n");
      out.write("                        <input type=\"hidden\" id=\"imageAction\" name=\"imageAction\" value=\"keep\">\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"col-auto\">\n");
      out.write("                        <button type=\"button\" class=\"btn btn-outline-danger\" onclick=\"removeImage()\" id=\"removeImageBtn\">\n");
      out.write("                            Remove Image\n");
      out.write("                        </button>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("\n");
      out.write("            ");
 if (note.getImage() != null && !note.getImage().isEmpty()) { 
      out.write("\n");
      out.write("            <div class=\"mb-2\">\n");
      out.write("                <img id=\"currentImage\" src=\"");
      out.print( note.getImage().substring(16) );
      out.write("\" alt=\"Note Image\" style=\"max-width: 400px; max-height: 400px;\">\n");
      out.write("            </div>\n");
      out.write("            ");
 } 
      out.write("\n");
      out.write("\n");
      out.write("            <div class=\"mb-3\">\n");
      out.write("                <img id=\"imagePreview\" alt=\"\" src=\"\" style=\"display:none; max-width: 400px; max-height: 400px;\">\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <hr>\n");
      out.write("\n");
      out.write("            <div class=\"d-flex gap-2\">\n");
      out.write("                <button type=\"submit\" class=\"btn btn-success\">Save Note</button>\n");
      out.write("\n");
      out.write("                <button type=\"button\" class=\"btn btn-danger\" data-bs-toggle=\"modal\" data-bs-target=\"#confirmDeleteModal\">\n");
      out.write("                    Delete Note\n");
      out.write("                </button>\n");
      out.write("\n");
      out.write("                <a href=\"index.jsp?indexID=");
      out.print( request.getParameter("indexID") );
      out.write("\" class=\"btn btn-secondary\">Go Back</a>\n");
      out.write("            </div>\n");
      out.write("        </form>\n");
      out.write("\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<div class=\"modal fade\" id=\"confirmDeleteModal\" tabindex=\"-1\" aria-labelledby=\"confirmDeleteModalLabel\" aria-hidden=\"true\">\n");
      out.write("    <div class=\"modal-dialog\">\n");
      out.write("        <div class=\"modal-content\">\n");
      out.write("            <div class=\"modal-header\">\n");
      out.write("                <h5 class=\"modal-title\" id=\"confirmDeleteModalLabel\">Confirm Deletion</h5>\n");
      out.write("                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"modal-body\">\n");
      out.write("                Are you sure you want to delete this note?\n");
      out.write("            </div>\n");
      out.write("            <div class=\"modal-footer\">\n");
      out.write("                <form action=\"DeleteNoteServlet\" method=\"post\">\n");
      out.write("                    <input type=\"hidden\" name=\"noteID\" value=\"");
      out.print( noteID );
      out.write("\">\n");
      out.write("                    <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\n");
      out.write("                    <button type=\"submit\" class=\"btn btn-danger\">Delete</button>\n");
      out.write("                </form>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("<div class=\"modal fade\" id=\"addCategoryModal\" tabindex=\"-1\" aria-labelledby=\"addCategoryModalLabel\" aria-hidden=\"true\">\n");
      out.write("    <div class=\"modal-dialog\">\n");
      out.write("        <div class=\"modal-content\">\n");
      out.write("            <div class=\"modal-header\">\n");
      out.write("                <h5 class=\"modal-title\" id=\"addCategoryModalLabel\">Add Category</h5>\n");
      out.write("                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\"></button>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"modal-body\">\n");
      out.write("                <form action=\"CreateCategoryServlet\" method=\"post\">\n");
      out.write("                    <input type=\"hidden\" name=\"from\" value=\"editNote.jsp?id=");
      out.print( noteID );
      out.write("\">\n");
      out.write("                    <div class=\"mb-3\">\n");
      out.write("                        <label for=\"categoryName\" class=\"form-label\">Category Name:</label>\n");
      out.write("                        <input type=\"text\" id=\"categoryName\" name=\"categoryName\" class=\"form-control\" required>\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                    <button type=\"submit\" class=\"btn btn-success\">Add Category</button>\n");
      out.write("                    <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\n");
      out.write("                </form>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("<div class=\"modal fade\" id=\"dumpModal\" tabindex=\"-1\" aria-labelledby=\"dumpModalLabel\" aria-hidden=\"true\">\n");
      out.write("    <div class=\"modal-dialog\">\n");
      out.write("        <div class=\"modal-content\">\n");
      out.write("            <div class=\"modal-header\">\n");
      out.write("                <h5 class=\"modal-title\" id=\"dumpModalLabel\">Dump File Content</h5>\n");
      out.write("                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"modal-body\">\n");
      out.write("                <input type=\"file\" id=\"fileInput\" accept=\".txt,.pdf,.docx\" class=\"form-control\">\n");
      out.write("                <br>\n");
      out.write("                <div class=\"alert alert-info p-2 small\" role=\"alert\">\n");
      out.write("                    Select a .txt, .pdf, or .docx file - Its content will be appended to the note.\n");
      out.write("                </div>\n");
      out.write("                <div id=\"fileError\" class=\"text-danger mt-2\" style=\"display:none;\"></div>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"modal-footer\">\n");
      out.write("                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancel</button>\n");
      out.write("                <button type=\"button\" class=\"btn btn-primary\" id=\"dumpFileBtn\">Dump</button>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("<script src=\"assets/js/updateCategoryRequest.js\"></script>\n");
      out.write("\n");
      out.write("<!-- Include Footer -->\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "footer.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    document.getElementById(\"clearNoteBtn\").addEventListener(\"click\", function () {\n");
      out.write("        const contentBox = document.querySelector(\"textarea[name='content']\");\n");
      out.write("        if (contentBox) {\n");
      out.write("            contentBox.value = \"\";\n");
      out.write("        }\n");
      out.write("    });\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("    document.getElementById(\"imageInput\").addEventListener(\"change\", function(event) {\n");
      out.write("        const file = event.target.files[0];\n");
      out.write("        const preview = document.getElementById(\"imagePreview\");\n");
      out.write("        const currentImage = document.getElementById(\"currentImage\");\n");
      out.write("        const imageAction = document.getElementById(\"imageAction\");\n");
      out.write("\n");
      out.write("        if (file && file.type.startsWith(\"image/\")) {\n");
      out.write("            const reader = new FileReader();\n");
      out.write("            reader.onload = function(e) {\n");
      out.write("                preview.src = e.target.result;\n");
      out.write("                preview.style.display = \"block\";\n");
      out.write("                if (currentImage) currentImage.style.display = \"none\";\n");
      out.write("                imageAction.value = \"upload\"; // mark for new image\n");
      out.write("            };\n");
      out.write("            reader.readAsDataURL(file);\n");
      out.write("        } else {\n");
      out.write("            // If file input is cleared\n");
      out.write("            preview.src = \"\";\n");
      out.write("            preview.style.display = \"none\";\n");
      out.write("            imageAction.value = \"none\";\n");
      out.write("        }\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    function removeImage() {\n");
      out.write("        const fileInput = document.getElementById(\"imageInput\");\n");
      out.write("        const preview = document.getElementById(\"imagePreview\");\n");
      out.write("        const currentImage = document.getElementById(\"currentImage\");\n");
      out.write("        const imageAction = document.getElementById(\"imageAction\");\n");
      out.write("\n");
      out.write("        // Clear the file input (removes the new file if one was selected)\n");
      out.write("        if (fileInput) fileInput.value = \"\";\n");
      out.write("        if (preview) {\n");
      out.write("            preview.src = \"\";\n");
      out.write("            preview.style.display = \"none\";\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        // If an existing image was present → we want to remove it\n");
      out.write("        if (currentImage) {\n");
      out.write("            currentImage.style.display = \"none\";\n");
      out.write("            imageAction.value = \"remove\";\n");
      out.write("        } else {\n");
      out.write("            // No image on the note, just clearing selected file\n");
      out.write("            imageAction.value = \"none\";\n");
      out.write("        }\n");
      out.write("    }\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<script src=\"assets/js/bootstrap.bundle.min.js\"></script>\n");
      out.write("<script src=\"assets/js/updateCategoryRequest.js\"></script>\n");
      out.write("\n");
      out.write("\n");
      out.write("<!-- PDF.js -->\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.10.377/pdf.min.js\"></script>\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.10.377/pdf.worker.min.js\"></script>\n");
      out.write("\n");
      out.write("<!-- Mammoth.js -->\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/mammoth/1.4.2/mammoth.browser.min.js\"></script>\n");
      out.write("\n");
      out.write("<!-- Dump Handler -->\n");
      out.write("<script src=\"assets/js/dumpFileIntoNote.js\"></script>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
